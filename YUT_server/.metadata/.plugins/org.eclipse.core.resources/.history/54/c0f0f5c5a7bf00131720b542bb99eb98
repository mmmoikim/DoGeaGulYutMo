package com.sasha.sasha;

import android.app.ActionBar.LayoutParams;
import android.app.Activity;
import android.content.res.Configuration;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;

import com.unity3d.player.UnityPlayer;

public class MainActivity extends Activity {
private UnityPlayer unityPlayer;
@Override
public void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setTheme(android.R.style.Theme_NoTitleBar_Fullscreen);
requestWindowFeature(Window.FEATURE_NO_TITLE);
unityPlayer = new UnityPlayer(this);
if (unityPlayer.getSettings().getBoolean("hide_status_bar", true)) {
getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN
, WindowManager.LayoutParams.FLAG_FULLSCREEN);
}
int glesMode = unityPlayer.getSettings().getInt("gles_mode", 1);
boolean trueColor8888 = false;
unityPlayer.init(glesMode, trueColor8888);
setContentView(R.layout.activity_main);
View playerView = unityPlayer.getView();
RelativeLayout layout  = new RelativeLayout(UnityPlayer.currentActivity);
UnityPlayer.currentActivity.addContentView(layout, new LinearLayout.LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT)); 
LayoutParams lp = new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT);
layout.addView(playerView, lp);
playerView.requestFocus();
}
@Override
public void onResume() {
super.onResume();
unityPlayer.resume();
}
@Override
public void onPause() {
super.onPause();
unityPlayer.pause();
}
@Override
public void onDestroy() {
super.onDestroy();
unityPlayer.quit();
}
@Override
public void onConfigurationChanged(Configuration newConfig) {
super. onConfigurationChanged(newConfig);
unityPlayer.configurationChanged(newConfig);
}
@Override
public void onWindowFocusChanged(boolean hasFocus) {
	super. onWindowFocusChanged(hasFocus);
	unityPlayer.windowFocusChanged(hasFocus);
	}
	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
	return unityPlayer.onKeyDown(keyCode, event);
	}
	@Override
	public boolean onKeyUp(int keyCode, KeyEvent event) {
	return unityPlayer.onKeyUp(keyCode, event);
	}
	}
